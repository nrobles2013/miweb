{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport { environment } from 'environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"auth.service\";\nimport * as i3 from \"app/shared/services/auth/jwt-auth.service\";\nexport let ReportesService = /*#__PURE__*/(() => {\n  class ReportesService {\n    // Agregar credenciales para otros servicios si es necesario\n    constructor(http, authService, serv) {\n      this.http = http;\n      this.authService = authService;\n      this.serv = serv;\n      this.apiUrl = `${environment.apiURL}`;\n      this.reporteServices = btoa('user:b4530586-15c6-43cf-8c1d-960f426f1986');\n    }\n    getReporteResumenTodos() {\n      const token = JSON.parse(sessionStorage.getItem(\"JWT_TOKEN\"));\n      const url = `${this.apiUrl}/estadistica/listatodos`;\n      return this.http.get(url, {\n        headers: new HttpHeaders().set('Authorization', `Bearer ${token.access_token}`).set('Content-Type', 'application/json')\n      });\n    }\n    getReporteResumenUltimo() {\n      const token = JSON.parse(sessionStorage.getItem(\"JWT_TOKEN\"));\n      const url = `${this.apiUrl}/estadistica/listaultimo`;\n      return this.http.get(url, {\n        headers: new HttpHeaders().set('Authorization', `Bearer ${token.access_token}`).set('Content-Type', 'application/json')\n      });\n    }\n    getReporteInversionTodos(usuario_id, cparticipe) {\n      const token = JSON.parse(sessionStorage.getItem(\"JWT_TOKEN\"));\n      const url = `${this.apiUrl}/inversion/listatodos`;\n      console.log(\"usuario es\" + usuario_id);\n      return this.http.post(url, {\n        usuario_id,\n        cparticipe\n      }, {\n        headers: new HttpHeaders().set('Authorization', `Bearer ${token.access_token}`).set('Content-Type', 'application/json')\n      });\n    }\n    getReporteInversionUltimo(usuario_id, cparticipe) {\n      const token = JSON.parse(sessionStorage.getItem(\"JWT_TOKEN\"));\n      const url = `${this.apiUrl}/inversion/listaultimo`;\n      console.log(\"usuario es\" + usuario_id);\n      return this.http.post(url, {\n        usuario_id,\n        cparticipe\n      }, {\n        headers: new HttpHeaders().set('Authorization', `Bearer ${token.access_token}`).set('Content-Type', 'application/json')\n      });\n    }\n    getMoviListAnio() {\n      const token = JSON.parse(sessionStorage.getItem(\"JWT_TOKEN\"));\n      const url = `${this.apiUrl}/movimientos/listaanio`;\n      return this.http.get(url, {\n        headers: new HttpHeaders().set('Authorization', `Bearer ${token.access_token}`).set('Content-Type', 'application/json')\n      });\n    }\n    getMoviListMes(meses) {\n      const token = JSON.parse(sessionStorage.getItem(\"JWT_TOKEN\"));\n      const url = `${this.apiUrl}/movimientos/listames/` + meses;\n      console.log(url);\n      return this.http.get(url, {\n        headers: new HttpHeaders().set('Authorization', `Bearer ${token.access_token}`).set('Content-Type', 'application/json')\n      });\n    }\n    getListaTransac() {\n      const token = JSON.parse(sessionStorage.getItem(\"JWT_TOKEN\"));\n      const url = `${this.apiUrl}/transaccion/listatodos`;\n      console.log(url);\n      return this.http.get(url, {\n        headers: new HttpHeaders().set('Authorization', `Bearer ${token.access_token}`).set('Content-Type', 'application/json')\n      });\n    }\n    getListaMovimientos(movimientos) {\n      const token = JSON.parse(sessionStorage.getItem(\"JWT_TOKEN\"));\n      const url = `${this.apiUrl}/movimientos/listamovimientos`;\n      return this.http.post(url, movimientos, {\n        headers: new HttpHeaders().set('Authorization', `Bearer ${token.access_token}`).set('Content-Type', 'application/json')\n      });\n    }\n    getListAnioConsulta() {\n      const token = JSON.parse(sessionStorage.getItem(\"JWT_TOKEN\"));\n      const url = `${this.apiUrl}/tipodocumentos/listaanio`;\n      return this.http.get(url, {\n        headers: new HttpHeaders().set('Authorization', `Bearer ${token.access_token}`).set('Content-Type', 'application/json')\n      });\n    }\n    getListDocumentosConsulta(ptipo) {\n      const token = JSON.parse(sessionStorage.getItem(\"JWT_TOKEN\"));\n      const url = `${this.apiUrl}/tipodocumentos/listadocumentos/${ptipo}`;\n      return this.http.get(url, {\n        headers: new HttpHeaders().set('Authorization', `Bearer ${token.access_token}`).set('Content-Type', 'application/json')\n      });\n    }\n    getListPeriodoConsulta() {\n      const token = JSON.parse(sessionStorage.getItem(\"JWT_TOKEN\"));\n      const url = `${this.apiUrl}/tipodocumentos/listaperiodo`;\n      return this.http.get(url, {\n        headers: new HttpHeaders().set('Authorization', `Bearer ${token.access_token}`).set('Content-Type', 'application/json')\n      });\n    }\n    getListFileRutaConsulta(ptipo) {\n      const token = JSON.parse(sessionStorage.getItem(\"JWT_TOKEN\"));\n      const url = `${this.apiUrl}/filedocumento/listafile/${ptipo}`;\n      return this.http.get(url, {\n        headers: new HttpHeaders().set('Authorization', `Bearer ${token.access_token}`).set('Content-Type', 'application/json')\n      });\n    }\n    getFileRutaEnvioConsulta(ruta, cparticipe, tipodocumento, correo, anio, periodo) {\n      const token = JSON.parse(sessionStorage.getItem(\"JWT_TOKEN\"));\n      const url = `${this.apiUrl}/consulta/enviocorreo`;\n      return this.http.post(url, {\n        ruta,\n        cparticipe,\n        tipodocumento,\n        correo,\n        anio,\n        periodo\n      }, {\n        headers: new HttpHeaders().set('Authorization', `Bearer ${token.access_token}`).set('Content-Type', 'application/json')\n      });\n    }\n    getInformacionConsulta(tipodoc, cpart) {\n      const token = JSON.parse(sessionStorage.getItem(\"JWT_TOKEN\"));\n      const url = `${this.apiUrl}/consulta/traedocumentos/${tipodoc}/${cpart}`;\n      return this.http.get(url, {\n        headers: new HttpHeaders().set('Authorization', `Bearer ${token.access_token}`).set('Content-Type', 'application/json')\n      });\n    }\n    getFileRutaEnvioDocumentos(ruta, cparticipe, tipodocumento, nombredocumento, correo) {\n      const token = JSON.parse(sessionStorage.getItem(\"JWT_TOKEN\"));\n      const url = `${this.apiUrl}/documentos/enviocorreo`;\n      console.log(correo);\n      console.log(nombredocumento);\n      return this.http.post(url, {\n        ruta,\n        cparticipe,\n        tipodocumento,\n        nombredocumento,\n        correo\n      }, {\n        headers: new HttpHeaders().set('Authorization', `Bearer ${token.access_token}`).set('Content-Type', 'application/json')\n      });\n    }\n    getGereneratePDF(ruta) {\n      const token = JSON.parse(sessionStorage.getItem(\"JWT_TOKEN\"));\n      const url = `${this.apiUrl}/filedocumento/generapdf`;\n      return this.http.post(url, {\n        ruta\n      }, {\n        headers: new HttpHeaders().set('Authorization', `Bearer ${token.access_token}`).set('Content-Type', 'application/json'),\n        responseType: 'blob'\n      });\n    }\n    getVERPDF(ruta) {\n      const token = JSON.parse(sessionStorage.getItem(\"JWT_TOKEN\"));\n      const url = `${this.apiUrl}/filedocumento/verpdf`;\n      return this.http.post(url, {\n        ruta\n      }, {\n        headers: new HttpHeaders().set('Authorization', `Bearer ${token.access_token}`).set('Content-Type', 'application/json'),\n        responseType: 'blob'\n      });\n    }\n    getListaNotificacion() {\n      const token = JSON.parse(sessionStorage.getItem(\"JWT_TOKEN\"));\n      const url = `${this.apiUrl}/notificacion/listatodos`;\n      return this.http.get(url, {\n        headers: new HttpHeaders().set('Authorization', `Bearer ${token.access_token}`).set('Content-Type', 'application/json')\n      });\n    }\n    getEnvioContactanos(usuario, correo, asunto, mensaje) {\n      const token = JSON.parse(sessionStorage.getItem(\"JWT_TOKEN\"));\n      const url = `${this.apiUrl}/contactanos/enviocorreo`;\n      return this.http.post(url, {\n        usuario,\n        correo,\n        asunto,\n        mensaje\n      }, {\n        headers: new HttpHeaders().set('Authorization', `Bearer ${token.access_token}`).set('Content-Type', 'application/json')\n      });\n    }\n    getListaUsuario(tpparticipe, username) {\n      const token = JSON.parse(sessionStorage.getItem(\"JWT_TOKEN\"));\n      const url = `${this.apiUrl}/usuario/lista`;\n      return this.http.post(url, {\n        tpparticipe,\n        username\n      }, {\n        headers: new HttpHeaders().set('Authorization', `Bearer ${token.access_token}`).set('Content-Type', 'application/json')\n      });\n    }\n    getActualizaUsuario(usuario_id, username, password) {\n      const token = JSON.parse(sessionStorage.getItem(\"JWT_TOKEN\"));\n      const url = `${this.apiUrl}/usuario/update`;\n      return this.http.put(url, {\n        usuario_id,\n        username,\n        password\n      }, {\n        headers: new HttpHeaders().set('Authorization', `Bearer ${token.access_token}`).set('Content-Type', 'application/json')\n      });\n    }\n  }\n  ReportesService.ɵfac = function ReportesService_Factory(t) {\n    return new (t || ReportesService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.AuthService), i0.ɵɵinject(i3.JwtAuthService));\n  };\n  ReportesService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ReportesService,\n    factory: ReportesService.ɵfac,\n    providedIn: 'root'\n  });\n  return ReportesService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}