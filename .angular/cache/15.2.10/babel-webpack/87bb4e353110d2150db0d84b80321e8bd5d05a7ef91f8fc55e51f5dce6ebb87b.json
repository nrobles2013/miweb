{"ast":null,"code":"/*\n Language: GraphQL\n Author: John Foster (GH jf990), and others\n Description: GraphQL is a query language for APIs\n Category: web, common\n*/\n\n/** @type LanguageFn */\nfunction graphql(hljs) {\n  const regex = hljs.regex;\n  const GQL_NAME = /[_A-Za-z][_0-9A-Za-z]*/;\n  return {\n    name: \"GraphQL\",\n    aliases: [\"gql\"],\n    case_insensitive: true,\n    disableAutodetect: false,\n    keywords: {\n      keyword: [\"query\", \"mutation\", \"subscription\", \"type\", \"input\", \"schema\", \"directive\", \"interface\", \"union\", \"scalar\", \"fragment\", \"enum\", \"on\"],\n      literal: [\"true\", \"false\", \"null\"]\n    },\n    contains: [hljs.HASH_COMMENT_MODE, hljs.QUOTE_STRING_MODE, hljs.NUMBER_MODE, {\n      scope: \"punctuation\",\n      match: /[.]{3}/,\n      relevance: 0\n    }, {\n      scope: \"punctuation\",\n      begin: /[\\!\\(\\)\\:\\=\\[\\]\\{\\|\\}]{1}/,\n      relevance: 0\n    }, {\n      scope: \"variable\",\n      begin: /\\$/,\n      end: /\\W/,\n      excludeEnd: true,\n      relevance: 0\n    }, {\n      scope: \"meta\",\n      match: /@\\w+/,\n      excludeEnd: true\n    }, {\n      scope: \"symbol\",\n      begin: regex.concat(GQL_NAME, regex.lookahead(/\\s*:/)),\n      relevance: 0\n    }],\n    illegal: [/[;<']/, /BEGIN/]\n  };\n}\nmodule.exports = graphql;","map":null,"metadata":{},"sourceType":"script","externalDependencies":[]}