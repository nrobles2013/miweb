{"ast":null,"code":"import { AppDropdownDirective } from './dropdown.directive';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./dropdown.directive\";\nexport let DropdownLinkDirective = /*#__PURE__*/(() => {\n  class DropdownLinkDirective {\n    get open() {\n      return this._open;\n    }\n    set open(value) {\n      this._open = value;\n      // if (value) {\n      //   this.nav.closeOtherLinks(this);\n      // }\n    }\n\n    constructor(nav, _elemRef) {\n      this._elemRef = _elemRef;\n      this.nav = nav;\n    }\n    ngOnInit() {\n      this.nav.addLink(this);\n      // set true if open class exists\n      setTimeout(() => {\n        this.open = this._elemRef.nativeElement.classList.contains('open');\n      }, 100);\n    }\n    ngOnDestroy() {\n      this.nav.removeGroup(this);\n    }\n    toggle() {\n      this.open = !this.open;\n    }\n  }\n  DropdownLinkDirective.ɵfac = function DropdownLinkDirective_Factory(t) {\n    return new (t || DropdownLinkDirective)(i0.ɵɵdirectiveInject(AppDropdownDirective), i0.ɵɵdirectiveInject(i0.ElementRef));\n  };\n  DropdownLinkDirective.ɵdir = /*@__PURE__*/i0.ɵɵdefineDirective({\n    type: DropdownLinkDirective,\n    selectors: [[\"\", \"appDropdownLink\", \"\"]],\n    hostVars: 2,\n    hostBindings: function DropdownLinkDirective_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        i0.ɵɵclassProp(\"open\", ctx.open);\n      }\n    },\n    inputs: {\n      group: \"group\",\n      open: \"open\"\n    }\n  });\n  return DropdownLinkDirective;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}