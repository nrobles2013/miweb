{"ast":null,"code":"import { Subject } from \"rxjs\";\nimport { takeUntil } from \"rxjs/operators\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"app/shared/services/match-media.service\";\nimport * as i2 from \"@angular/flex-layout\";\nimport * as i3 from \"./egret-sidebar-helper.service\";\nconst _c0 = [\"*\"];\nexport let EgretSidebarComponent = /*#__PURE__*/(() => {\n  class EgretSidebarComponent {\n    constructor(matchMediaService, mediaObserver, sidebarHelperService, _renderer, _elementRef, cdr) {\n      this.matchMediaService = matchMediaService;\n      this.mediaObserver = mediaObserver;\n      this.sidebarHelperService = sidebarHelperService;\n      this._renderer = _renderer;\n      this._elementRef = _elementRef;\n      this.cdr = cdr;\n      this.backdrop = null;\n      this.lockedBreakpoint = \"gt-sm\";\n      this.unsubscribeAll = new Subject();\n    }\n    ngOnInit() {\n      this.sidebarHelperService.setSidebar(this.name, this);\n      if (this.mediaObserver.isActive(this.lockedBreakpoint)) {\n        this.sidebarLockedOpen = true;\n        this.opened = true;\n      } else {\n        this.sidebarLockedOpen = false;\n        this.opened = false;\n      }\n      this.matchMediaService.onMediaChange.pipe(takeUntil(this.unsubscribeAll)).subscribe(() => {\n        // console.log(\"medua sub\");\n        if (this.mediaObserver.isActive(this.lockedBreakpoint)) {\n          this.sidebarLockedOpen = true;\n          this.opened = true;\n        } else {\n          this.sidebarLockedOpen = false;\n          this.opened = false;\n        }\n      });\n    }\n    open() {\n      this.opened = true;\n      if (!this.sidebarLockedOpen && !this.backdrop) {\n        this.showBackdrop();\n      }\n    }\n    close() {\n      this.opened = false;\n      this.hideBackdrop();\n    }\n    toggle() {\n      if (this.opened) {\n        this.close();\n      } else {\n        this.open();\n      }\n    }\n    showBackdrop() {\n      this.backdrop = this._renderer.createElement(\"div\");\n      this.backdrop.classList.add(\"egret-sidebar-overlay\");\n      this._renderer.appendChild(this._elementRef.nativeElement.parentElement, this.backdrop);\n      // Close sidebar onclick\n      this.backdrop.addEventListener(\"click\", () => {\n        this.close();\n      });\n      this.cdr.markForCheck();\n    }\n    hideBackdrop() {\n      if (this.backdrop) {\n        this.backdrop.parentNode.removeChild(this.backdrop);\n        this.backdrop = null;\n      }\n      this.cdr.markForCheck();\n    }\n    ngOnDestroy() {\n      this.unsubscribeAll.next(1);\n      this.unsubscribeAll.complete();\n      this.sidebarHelperService.removeSidebar(this.name);\n    }\n  }\n  EgretSidebarComponent.ɵfac = function EgretSidebarComponent_Factory(t) {\n    return new (t || EgretSidebarComponent)(i0.ɵɵdirectiveInject(i1.MatchMediaService), i0.ɵɵdirectiveInject(i2.MediaObserver), i0.ɵɵdirectiveInject(i3.EgretSidebarHelperService), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef));\n  };\n  EgretSidebarComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: EgretSidebarComponent,\n    selectors: [[\"egret-sidebar\"]],\n    hostVars: 8,\n    hostBindings: function EgretSidebarComponent_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        i0.ɵɵclassProp(\"position-right\", ctx.right)(\"open\", ctx.opened)(\"sidebar-locked-open\", ctx.sidebarLockedOpen)(\"is-over\", ctx.isOver);\n      }\n    },\n    inputs: {\n      name: \"name\",\n      right: \"right\"\n    },\n    ngContentSelectors: _c0,\n    decls: 2,\n    vars: 0,\n    template: function EgretSidebarComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵprojectionDef();\n        i0.ɵɵelementStart(0, \"div\");\n        i0.ɵɵprojection(1);\n        i0.ɵɵelementEnd();\n      }\n    }\n  });\n  return EgretSidebarComponent;\n})();\nexport let EgretSidebarTogglerDirective = /*#__PURE__*/(() => {\n  class EgretSidebarTogglerDirective {\n    constructor(egretSidebarHelperService) {\n      this.egretSidebarHelperService = egretSidebarHelperService;\n    }\n    onClick() {\n      this.egretSidebarHelperService.getSidebar(this.id).toggle();\n    }\n  }\n  EgretSidebarTogglerDirective.ɵfac = function EgretSidebarTogglerDirective_Factory(t) {\n    return new (t || EgretSidebarTogglerDirective)(i0.ɵɵdirectiveInject(i3.EgretSidebarHelperService));\n  };\n  EgretSidebarTogglerDirective.ɵdir = /*@__PURE__*/i0.ɵɵdefineDirective({\n    type: EgretSidebarTogglerDirective,\n    selectors: [[\"\", \"egretSidebarToggler\", \"\"]],\n    hostBindings: function EgretSidebarTogglerDirective_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵlistener(\"click\", function EgretSidebarTogglerDirective_click_HostBindingHandler() {\n          return ctx.onClick();\n        });\n      }\n    },\n    inputs: {\n      id: [\"egretSidebarToggler\", \"id\"]\n    }\n  });\n  return EgretSidebarTogglerDirective;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}