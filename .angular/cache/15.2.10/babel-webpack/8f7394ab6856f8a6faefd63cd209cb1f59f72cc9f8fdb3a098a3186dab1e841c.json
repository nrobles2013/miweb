{"ast":null,"code":"import { UntypedFormGroup, UntypedFormControl, Validators } from '@angular/forms';\nimport { Correo } from 'app/shared/models/correo.model';\nimport { catchError } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/material/snack-bar\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"../../../shared/services/navigation.service\";\nimport * as i4 from \"app/shared/services/auth/jwt-auth.service\";\nimport * as i5 from \"@angular/common\";\nimport * as i6 from \"@angular/forms\";\nimport * as i7 from \"@angular/material/legacy-button\";\nimport * as i8 from \"@angular/material/legacy-form-field\";\nimport * as i9 from \"@angular/material/legacy-input\";\nimport * as i10 from \"@angular/material/legacy-card\";\nimport * as i11 from \"@angular/material/legacy-progress-bar\";\nimport * as i12 from \"@angular/flex-layout/flex\";\nfunction ForgotPasswordComponent_small_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\", 17);\n    i0.ɵɵtext(1, \" Email is required \");\n    i0.ɵɵelementEnd();\n  }\n}\nexport let ForgotPasswordComponent = /*#__PURE__*/(() => {\n  class ForgotPasswordComponent {\n    constructor(_snackBar, router, navigationService, route, jwtAuth) {\n      this._snackBar = _snackBar;\n      this.router = router;\n      this.navigationService = navigationService;\n      this.route = route;\n      this.jwtAuth = jwtAuth;\n      this.datosusuario = [];\n    }\n    ngOnInit() {\n      const userEmail = new UntypedFormControl('', Validators.required);\n      this.signinForm = new UntypedFormGroup({\n        userEmail: new UntypedFormControl(this.userEmail, Validators.required)\n      });\n    }\n    submitEmail() {\n      this.jwtAuth.traerIP().subscribe(data => {\n        let ip = JSON.stringify(data.ip);\n        this.miip = ip;\n        console.log(this.miip);\n        this.correo = new Correo(this.userEmail, this.miip);\n        this.jwtAuth.reseteo(this.correo).pipe(catchError(error => {\n          console.log('Error en la solicitud:', error);\n          throw error; // Lanza el error para que pueda ser manejado por otros componentes/observadores.\n        })).subscribe(data => {\n          if (data.mensaje == \"ok\") {\n            this.navigationService.sendObjectSourcePass(data);\n            this.router.navigate(['/sessions/password']);\n          } else {\n            this._snackBar.open(data.mensaje, 'Informe', {\n              duration: 3000,\n              horizontalPosition: 'right',\n              verticalPosition: 'top'\n            });\n          }\n        });\n      });\n    }\n  }\n  ForgotPasswordComponent.ɵfac = function ForgotPasswordComponent_Factory(t) {\n    return new (t || ForgotPasswordComponent)(i0.ɵɵdirectiveInject(i1.MatSnackBar), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.NavigationService), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i4.JwtAuthService));\n  };\n  ForgotPasswordComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ForgotPasswordComponent,\n    selectors: [[\"app-forgot-password\"]],\n    decls: 22,\n    vars: 4,\n    consts: [[1, \"page-wrap\", \"h-full\", \"slate\"], [1, \"session-form-hold\"], [\"mode\", \"determinate\", 1, \"session-progress\"], [1, \"text-center\", \"pt-8\", \"pb-16\"], [\"width\", \"60px\", \"src\", \"assets/images/egret.png\", \"alt\", \"\", 1, \"mb-8\"], [1, \"text-muted\", \"m-0\"], [3, \"ngSubmit\"], [\"fpForm\", \"ngForm\"], [1, \"\"], [1, \"full-width\"], [\"matInput\", \"\", \"name\", \"email\", \"required\", \"\", \"placeholder\", \"Email\", \"value\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"email\", \"ngModel\"], [\"class\", \"form-error-msg\", 4, \"ngIf\"], [\"mat-raised-button\", \"\", 1, \"mat-primary\", \"full-width\", \"mb-16\", 3, \"disabled\"], [1, \"text-center\"], [1, \"mat-primary\", \"text-center\", \"full-width\", 3, \"routerLink\"], [\"fxFlex\", \"\"], [1, \"form-error-msg\"]],\n    template: function ForgotPasswordComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1);\n        i0.ɵɵelement(2, \"mat-progress-bar\", 2);\n        i0.ɵɵelementStart(3, \"mat-card\")(4, \"mat-card-content\")(5, \"div\", 3);\n        i0.ɵɵelement(6, \"img\", 4);\n        i0.ɵɵelementStart(7, \"p\", 5);\n        i0.ɵɵtext(8, \"solicitud de nueva contrase\\u00F1a\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(9, \"form\", 6, 7);\n        i0.ɵɵlistener(\"ngSubmit\", function ForgotPasswordComponent_Template_form_ngSubmit_9_listener() {\n          return ctx.submitEmail();\n        });\n        i0.ɵɵelementStart(11, \"div\", 8)(12, \"mat-form-field\", 9)(13, \"input\", 10, 11);\n        i0.ɵɵlistener(\"ngModelChange\", function ForgotPasswordComponent_Template_input_ngModelChange_13_listener($event) {\n          return ctx.userEmail = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵtemplate(15, ForgotPasswordComponent_small_15_Template, 2, 0, \"small\", 12);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(16, \"button\", 13);\n        i0.ɵɵtext(17, \"Aceptar\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(18, \"div\", 14)(19, \"a\", 15);\n        i0.ɵɵtext(20, \"Sign in\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(21, \"span\", 16);\n        i0.ɵɵelementEnd()()()()()();\n      }\n      if (rf & 2) {\n        const _r0 = i0.ɵɵreference(10);\n        const _r1 = i0.ɵɵreference(14);\n        i0.ɵɵadvance(13);\n        i0.ɵɵproperty(\"ngModel\", ctx.userEmail);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", _r1.errors && (_r1.dirty || _r1.touched) && (_r1 == null ? null : _r1.errors == null ? null : _r1.errors.required));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"disabled\", _r0.invalid);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"routerLink\", \"/sessions/signin\");\n      }\n    },\n    dependencies: [i5.NgIf, i6.ɵNgNoValidate, i6.DefaultValueAccessor, i6.NgControlStatus, i6.NgControlStatusGroup, i6.RequiredValidator, i6.NgModel, i6.NgForm, i7.MatLegacyButton, i8.MatLegacyFormField, i9.MatLegacyInput, i10.MatLegacyCard, i10.MatLegacyCardContent, i11.MatLegacyProgressBar, i12.DefaultFlexDirective, i2.RouterLink]\n  });\n  return ForgotPasswordComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}