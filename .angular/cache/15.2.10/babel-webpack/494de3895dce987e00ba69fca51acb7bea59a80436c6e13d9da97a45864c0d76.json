{"ast":null,"code":"import { HttpHeaders, HttpParams } from '@angular/common/http';\nimport { BehaviorSubject } from 'rxjs';\nimport { environment } from 'environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let AuthService = /*#__PURE__*/(() => {\n  class AuthService {\n    // Agregar credenciales para otros servicios si es necesario\n    constructor(http) {\n      this.http = http;\n      this.reporteServices = btoa('user:3b0d077f-d9f3-4242-846e-56925b524307'); //riesgo\n      this.apiUrl = `${environment.apiURL}`;\n      this.objectSource = new BehaviorSubject([]);\n      this.$getObjectSource = this.objectSource.asObservable();\n    }\n    sendObjectSource(data) {\n      this.objectSource.next(data);\n    }\n    getReporteServices() {\n      return this.reporteServices;\n    }\n    // Agregar métodos para obtener credenciales de otros servicios si es necesario\n    enviarAuthServiceComoJson() {\n      // Convertir el objeto AuthService a JSON\n      const authServiceJson = JSON.stringify(this);\n      // Agregar el JSON como parámetro de consulta en la URL\n      const params = new HttpParams().set('authServiceJson', authServiceJson);\n      // Realizar la solicitud GET con los parámetros de consulta\n      this.http.get(this.apiUrl, {\n        params\n      }).subscribe(data => {\n        console.log('Respuesta del servidor:', data);\n      }, error => {\n        console.error('Error en la solicitud:', error);\n      });\n    }\n    obtenerDatos(fecha) {\n      const headers = new HttpHeaders({\n        Authorization: `Basic ${this.authService.getReporteServices()}`\n      });\n      const url = `${this.apiUrl}/${fecha}`;\n      return this.http.get(url, {\n        headers\n      });\n    }\n  }\n  AuthService.ɵfac = function AuthService_Factory(t) {\n    return new (t || AuthService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  AuthService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthService,\n    factory: AuthService.ɵfac,\n    providedIn: 'root'\n  });\n  return AuthService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}