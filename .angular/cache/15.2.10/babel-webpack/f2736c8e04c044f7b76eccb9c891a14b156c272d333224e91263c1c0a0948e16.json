{"ast":null,"code":"import { takeUntil } from \"rxjs/operators\";\nimport { Subject } from \"rxjs\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"app/shared/services/match-media.service\";\nimport * as i2 from \"./egret-sidenav-helper.service\";\nimport * as i3 from \"@angular/material/sidenav\";\nimport * as i4 from \"@angular/flex-layout\";\nexport let EgretSidenavHelperDirective = /*#__PURE__*/(() => {\n  class EgretSidenavHelperDirective {\n    constructor(matchMediaService, egretSidenavHelperService, matSidenav, mediaObserver) {\n      this.matchMediaService = matchMediaService;\n      this.egretSidenavHelperService = egretSidenavHelperService;\n      this.matSidenav = matSidenav;\n      this.mediaObserver = mediaObserver;\n      // Set the default value\n      this.isOpen = true;\n      this.unsubscribeAll = new Subject();\n    }\n    ngOnInit() {\n      this.egretSidenavHelperService.setSidenav(this.id, this.matSidenav);\n      if (this.mediaObserver.isActive(this.isOpenBreakpoint)) {\n        this.isOpen = true;\n        this.matSidenav.mode = \"side\";\n        this.matSidenav.toggle(true);\n      } else {\n        this.isOpen = false;\n        this.matSidenav.mode = \"over\";\n        this.matSidenav.toggle(false);\n      }\n      this.matchMediaService.onMediaChange.pipe(takeUntil(this.unsubscribeAll)).subscribe(() => {\n        if (this.mediaObserver.isActive(this.isOpenBreakpoint)) {\n          this.isOpen = true;\n          this.matSidenav.mode = \"side\";\n          this.matSidenav.toggle(true);\n        } else {\n          this.isOpen = false;\n          this.matSidenav.mode = \"over\";\n          this.matSidenav.toggle(false);\n        }\n      });\n    }\n    ngOnDestroy() {\n      this.unsubscribeAll.next(1);\n      this.unsubscribeAll.complete();\n    }\n  }\n  EgretSidenavHelperDirective.ɵfac = function EgretSidenavHelperDirective_Factory(t) {\n    return new (t || EgretSidenavHelperDirective)(i0.ɵɵdirectiveInject(i1.MatchMediaService), i0.ɵɵdirectiveInject(i2.EgretSidenavHelperService), i0.ɵɵdirectiveInject(i3.MatSidenav), i0.ɵɵdirectiveInject(i4.MediaObserver));\n  };\n  EgretSidenavHelperDirective.ɵdir = /*@__PURE__*/i0.ɵɵdefineDirective({\n    type: EgretSidenavHelperDirective,\n    selectors: [[\"\", \"egretSidenavHelper\", \"\"]],\n    hostVars: 2,\n    hostBindings: function EgretSidenavHelperDirective_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        i0.ɵɵclassProp(\"is-open\", ctx.isOpen);\n      }\n    },\n    inputs: {\n      id: [\"egretSidenavHelper\", \"id\"],\n      isOpenBreakpoint: [\"isOpen\", \"isOpenBreakpoint\"]\n    }\n  });\n  return EgretSidenavHelperDirective;\n})();\nexport let EgretSidenavTogglerDirective = /*#__PURE__*/(() => {\n  class EgretSidenavTogglerDirective {\n    constructor(egretSidenavHelperService) {\n      this.egretSidenavHelperService = egretSidenavHelperService;\n    }\n    onClick() {\n      // console.log(this.egretSidenavHelperService.getSidenav(this.id))\n      this.egretSidenavHelperService.getSidenav(this.id).toggle();\n    }\n  }\n  EgretSidenavTogglerDirective.ɵfac = function EgretSidenavTogglerDirective_Factory(t) {\n    return new (t || EgretSidenavTogglerDirective)(i0.ɵɵdirectiveInject(i2.EgretSidenavHelperService));\n  };\n  EgretSidenavTogglerDirective.ɵdir = /*@__PURE__*/i0.ɵɵdefineDirective({\n    type: EgretSidenavTogglerDirective,\n    selectors: [[\"\", \"egretSidenavToggler\", \"\"]],\n    hostBindings: function EgretSidenavTogglerDirective_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵlistener(\"click\", function EgretSidenavTogglerDirective_click_HostBindingHandler() {\n          return ctx.onClick();\n        });\n      }\n    },\n    inputs: {\n      id: [\"egretSidenavToggler\", \"id\"]\n    }\n  });\n  return EgretSidenavTogglerDirective;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}