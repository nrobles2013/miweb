{"ast":null,"code":"import * as moment from 'moment';\nimport Chart from 'chart.js/auto';\nimport { MatCardModule } from '@angular/material/card';\nimport { Auditoria } from 'app/shared/models/auditoria.model';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/material/snack-bar\";\nimport * as i2 from \"app/shared/services/reportes.service\";\nimport * as i3 from \"app/shared/services/auth/jwt-auth.service\";\nimport * as i4 from \"app/shared/services/auditoria.service\";\nimport * as i5 from \"@angular/router\";\nimport * as i6 from \"@angular/material/card\";\nexport let InversionComponent = /*#__PURE__*/(() => {\n  class InversionComponent {\n    constructor(_snackBar, reportesService, jwtAuth, auditoriaService, router, route) {\n      this._snackBar = _snackBar;\n      this.reportesService = reportesService;\n      this.jwtAuth = jwtAuth;\n      this.auditoriaService = auditoriaService;\n      this.router = router;\n      this.route = route;\n      this.type = \"line\";\n      this.barType = \"bar\";\n      this.doughnutType = \"doughnut\";\n      this.pieType = \"pie\";\n      this.listfecha = [];\n      this.listNumpar = [];\n      this.listTotalInver = [];\n      this.listValactual = [];\n    }\n    ngOnInit() {\n      console.log(\"participe es\");\n      this.reportesService.getReporteInversionUltimo(this.jwtAuth.user.usuario_id, this.jwtAuth.user.cparticipe).subscribe(response => {\n        let datos = JSON.stringify(response);\n        let datosparse = JSON.parse(datos);\n        const fechavalcuota = moment(datosparse[0].fecha).format(\"DD/MM/YYYY\");\n        console.log(fechavalcuota);\n        this.valactualfecha = fechavalcuota;\n        this.valactual = datosparse[0].montoinvertido;\n        this.valnumpar = datosparse[0].numparticipacion;\n        this.valortotal = datosparse[0].valinvertido;\n      }, err => {\n        this.router.navigate(['/sessions/signin']);\n      });\n      this.reportesService.getReporteInversionTodos(this.jwtAuth.user.usuario_id, this.jwtAuth.user.cparticipe).subscribe(response => {\n        let datos = JSON.stringify(response);\n        let datosparse = JSON.parse(datos);\n        for (let i = 0; i < datosparse.length; i++) {\n          this.listfecha.push(moment(datosparse[i].fecha).format(\"DD/MM/YYYY\"));\n          console.log(datosparse[i].fecha);\n          this.listTotalInver.push(datosparse[i].montoinvertido);\n          this.listNumpar.push(datosparse[i].numparticipacion);\n          this.listValactual.push(datosparse[i].valinvertido);\n        }\n        this.chart4 = new Chart('canvas4', {\n          type: this.type,\n          data: {\n            labels: this.listfecha,\n            datasets: [{\n              label: 'Número de Participación',\n              data: this.listNumpar,\n              borderColor: \"#3cba9f\",\n              fill: true,\n              backgroundColor: ['rgba(255, 99, 132, 0.2)', 'rgba(54, 162, 235, 0.2)', 'rgba(255, 206, 86, 0.2)', 'rgba(75, 192, 192, 0.2)', 'rgba(153, 102, 0, 0.2)', 'rgba(255, 159, 64, 0.2)', 'rgba(255, 99, 132, 0.2)', 'rgba(54, 162, 235, 0.2)', 'rgba(255, 206, 86, 0.2)', 'rgba(75, 192, 192, 0.2)', 'rgba(153, 102, 0, 0.2)', 'rgba(255, 159, 64, 0.2)'],\n              borderWidth: 1\n            }]\n          },\n          options: {\n            plugins: {\n              legend: {\n                display: false,\n                labels: {\n                  color: 'rgb(255, 99, 132)'\n                }\n              }\n            },\n            scales: {\n              x: {\n                display: true\n              },\n              y: {\n                display: true,\n                beginAtZero: true\n              }\n            }\n          }\n        });\n        this.chart5 = new Chart('canvas5', {\n          type: this.barType,\n          data: {\n            labels: this.listfecha,\n            datasets: [{\n              label: 'Total de Inversión',\n              data: this.listTotalInver,\n              borderColor: \"#3cba9f\",\n              fill: false,\n              backgroundColor: ['rgba(255, 99, 132, 0.2)', 'rgba(54, 162, 235, 0.2)', 'rgba(255, 206, 86, 0.2)', 'rgba(75, 192, 192, 0.2)', 'rgba(153, 102, 0, 0.2)', 'rgba(255, 159, 64, 0.2)', 'rgba(255, 99, 132, 0.2)', 'rgba(54, 162, 235, 0.2)', 'rgba(255, 206, 86, 0.2)', 'rgba(75, 192, 192, 0.2)', 'rgba(153, 102, 0, 0.2)', 'rgba(255, 159, 64, 0.2)'],\n              borderWidth: 1\n            }]\n          },\n          options: {\n            plugins: {\n              legend: {\n                display: false,\n                labels: {\n                  color: 'rgb(255, 99, 132)'\n                }\n              }\n            },\n            scales: {\n              x: {\n                display: true\n              },\n              y: {\n                display: true,\n                beginAtZero: true\n              }\n            }\n          }\n        });\n        this.chart6 = new Chart('canvas6', {\n          type: this.barType,\n          data: {\n            labels: this.listfecha,\n            datasets: [{\n              label: 'Valor actual de su inversión',\n              data: this.listValactual,\n              borderColor: \"#3cba9f\",\n              fill: false,\n              backgroundColor: ['rgba(255, 99, 132, 0.2)', 'rgba(54, 162, 235, 0.2)', 'rgba(255, 206, 86, 0.2)', 'rgba(75, 192, 192, 0.2)', 'rgba(153, 102, 0, 0.2)', 'rgba(255, 159, 64, 0.2)', 'rgba(255, 99, 132, 0.2)', 'rgba(54, 162, 235, 0.2)', 'rgba(255, 206, 86, 0.2)', 'rgba(75, 192, 192, 0.2)', 'rgba(153, 102, 0, 0.2)', 'rgba(255, 159, 64, 0.2)'],\n              borderWidth: 1\n            }]\n          },\n          options: {\n            plugins: {\n              legend: {\n                display: false,\n                labels: {\n                  color: 'rgb(255, 99, 132)'\n                }\n              }\n            },\n            indexAxis: 'y'\n          }\n        });\n      });\n      this.jwtAuth.traerIP().subscribe(data => {\n        let date = new Date();\n        let ip = JSON.stringify(data.ip);\n        this.miip = ip;\n        this.auditoria = new Auditoria(this.miip, this.jwtAuth.user.usuario_id, this.jwtAuth.user.username, \"ingreso a tú Inversion\", this.jwtAuth.user.idtipoparticipe, this.jwtAuth.user.cparticipe, date);\n        this.auditoriaService.insertar(this.auditoria).subscribe(data => {\n          console.log(data);\n        });\n      });\n    }\n    listPageable(p, s) {\n      // return this.http.get<any>(`${this.url}/pageable?page=${p}&size=${s}`);\n    }\n    ngAfterViewInit() {\n      if (this.jwtAuth.user.cparticipe == \"99999\") {\n        this.router.navigate(['/sessions/signin']);\n      }\n      // Event listener para 'touchmove' con passive: true\n      window.addEventListener('touchmove', this.handleTouchMove, {\n        passive: true\n      });\n      // Event listener para 'touchstart' con passive: true\n      window.addEventListener('touchstart', this.handleTouchStart, {\n        passive: true\n      });\n    }\n    handleTouchMove(event) {\n      // Lógica para manejar el evento 'touchmove'\n      // Puedes agregar aquí cualquier código que necesites ejecutar cuando se detecte el evento 'touchmove'\n    }\n    handleTouchStart(event) {\n      // Lógica para manejar el evento 'touchstart'\n      // Puedes agregar aquí cualquier código que necesites ejecutar cuando se detecte el evento 'touchstart'\n    }\n  }\n  InversionComponent.ɵfac = function InversionComponent_Factory(t) {\n    return new (t || InversionComponent)(i0.ɵɵdirectiveInject(i1.MatSnackBar), i0.ɵɵdirectiveInject(i2.ReportesService), i0.ɵɵdirectiveInject(i3.JwtAuthService), i0.ɵɵdirectiveInject(i4.AuditoriaService), i0.ɵɵdirectiveInject(i5.Router), i0.ɵɵdirectiveInject(i5.ActivatedRoute));\n  };\n  InversionComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: InversionComponent,\n    selectors: [[\"app-inversion\"]],\n    standalone: true,\n    features: [i0.ɵɵStandaloneFeature],\n    decls: 36,\n    vars: 4,\n    consts: [[\"id\", \"contenido\", 1, \"flex-container\"], [2, \"flex-grow\", \"1\"], [1, \"card_class\"], [1, \"title_class\"], [1, \"subtitle\"], [\"mat-card-image\", \"\", \"src\", \"../assets/images/img4.png \", 2, \"width\", \"60px\", \"height\", \"60px\", \"top\", \"40px\"], [1, \"estadistica_class\"], [\"id\", \"canvas4\", \"width\", \"10\", \"height\", \"2px\"], [1, \"card_class\", \"bg-warning\"], [\"mat-card-image\", \"\", \"src\", \"../assets/images/img5.png \", 2, \"width\", \"60px\", \"height\", \"60px\", \"top\", \"40px\"], [\"id\", \"canvas5\", \"width\", \"10\", \"height\", \"2px\"], [1, \"card_class\", \"bg-info\"], [\"mat-card-image\", \"\", \"src\", \"../assets/images/img6.png \", 2, \"width\", \"60px\", \"height\", \"60px\", \"top\", \"40px\"], [\"id\", \"canvas6\", \"width\", \"10\", \"height\", \"2px\"]],\n    template: function InversionComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"body\")(1, \"div\", 0)(2, \"div\", 1)(3, \"mat-card\", 2)(4, \"mat-card-header\")(5, \"mat-card-title\", 3);\n        i0.ɵɵtext(6, \"N\\u00FAmero de participaciones\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"mat-card-subtitle\", 4);\n        i0.ɵɵtext(8);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(9, \"img\", 5);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(10, \"div\", 6);\n        i0.ɵɵelement(11, \"canvas\", 7);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(12, \"div\", 0)(13, \"div\", 1)(14, \"mat-card\", 8)(15, \"mat-card-header\")(16, \"mat-card-title\", 3);\n        i0.ɵɵtext(17, \"Total de inversi\\u00F3n realizada S/\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(18, \"mat-card-subtitle\", 4);\n        i0.ɵɵtext(19);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(20, \"mat-card-subtitle\", 4);\n        i0.ɵɵtext(21);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(22, \"img\", 9);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(23, \"div\", 6);\n        i0.ɵɵelement(24, \"canvas\", 10);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(25, \"div\", 0)(26, \"div\", 1)(27, \"mat-card\", 11)(28, \"mat-card-header\")(29, \"mat-card-title\", 3);\n        i0.ɵɵtext(30, \"Valor Actual de tu Inversi\\u00F3n\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(31, \"mat-card-subtitle\", 4);\n        i0.ɵɵtext(32);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(33, \"img\", 12);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(34, \"div\", 6);\n        i0.ɵɵelement(35, \"canvas\", 13);\n        i0.ɵɵelementEnd()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(8);\n        i0.ɵɵtextInterpolate(ctx.valnumpar);\n        i0.ɵɵadvance(11);\n        i0.ɵɵtextInterpolate(ctx.valactualfecha);\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate(ctx.valactual);\n        i0.ɵɵadvance(11);\n        i0.ɵɵtextInterpolate(ctx.valortotal);\n      }\n    },\n    dependencies: [MatCardModule, i6.MatCard, i6.MatCardHeader, i6.MatCardImage, i6.MatCardSubtitle, i6.MatCardTitle],\n    styles: [\"@charset \\\"UTF-8\\\";.card_class[_ngcontent-%COMP%]{margin:1%;width:300px;height:180px;float:left;align-items:center;box-shadow:6px 6px;resize:horizontal;background-color:#1c376e}.estadistica_class[_ngcontent-%COMP%]{margin:0%;width:580px;height:200px;display:flex;float:left;align-items:center;resize:horizontal;font-size:55px;box-shadow:6px 6px;background-color:#fff;flex-wrap:wrap;flex-basis:0;flex-grow:999;min-width:60%}.title_class[_ngcontent-%COMP%]{color:#f0f8ff;text-align:center;margin:10px;font-size:20px;font-family:Cambria,Cochin,Georgia,Times,Times New Roman,serif}.example-container[_ngcontent-%COMP%]{overflow-x:scroll;flex-wrap:wrap}.example-container2[_ngcontent-%COMP%]{flex-wrap:wrap;width:100%}.subtitle[_ngcontent-%COMP%]{color:#f0f8ff;margin:2;text-align:center;font-size:14px;font-family:Cambria,Cochin,Georgia,Times,Times New Roman,serif}#contenido[_ngcontent-%COMP%]{background-color:#fbf9f9;float:left;width:100%;padding:0;margin-top:0;text-align:center}.flex-container[_ngcontent-%COMP%]{display:flex;align-items:stretch;background-color:#fbf9f9}.flex-container[_ngcontent-%COMP%] > div[_ngcontent-%COMP%]{color:#000;background-color:#fbf9f9;width:100px;margin:0;text-align:center;line-height:30px;font-size:15px}body[_ngcontent-%COMP%]{font-family:Roboto,Helvetica Neue,sans-serif}ul[_ngcontent-%COMP%]{list-style-type:none;margin:5px;padding:0;overflow:hidden;background-color:#333}li[_ngcontent-%COMP%]{float:left}li[_ngcontent-%COMP%]   a[_ngcontent-%COMP%]{display:block;color:#fff;text-align:center;padding:14px 16px;text-decoration:none}li[_ngcontent-%COMP%]   a[_ngcontent-%COMP%]:hover:not(.active){background-color:#111}.active[_ngcontent-%COMP%]{background-color:#4caf50}div.gallery[_ngcontent-%COMP%]{border:1px solid #ccc;width:150px;height:150px}div.gallery[_ngcontent-%COMP%]:hover{border:1px solid #777}div.gallery[_ngcontent-%COMP%]   img[_ngcontent-%COMP%]{width:100%;height:auto}div.desc[_ngcontent-%COMP%]{padding:5px;text-align:center;font-size:12px}.responsive[_ngcontent-%COMP%]{padding:0 6px;float:left;width:31%}@media only screen and (max-width: 720px){.responsive[_ngcontent-%COMP%]{width:30%;margin:2px 0}}@media only screen and (max-width: 719px){.responsive[_ngcontent-%COMP%]{width:50%;margin:2px 0}}@media only screen and (max-width: 500px){.responsive[_ngcontent-%COMP%]{width:100%}}.clearfix[_ngcontent-%COMP%]:after{content:\\\"\\\";display:table;clear:both}\"]\n  });\n  return InversionComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}