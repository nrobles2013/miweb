{"ast":null,"code":"import { MatLegacyButton as MatButton } from '@angular/material/legacy-button';\nimport { MatLegacyProgressBar as MatProgressBar } from '@angular/material/legacy-progress-bar';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"@angular/material/legacy-button\";\nimport * as i4 from \"@angular/material/legacy-form-field\";\nimport * as i5 from \"@angular/material/legacy-input\";\nimport * as i6 from \"@angular/material/legacy-card\";\nimport * as i7 from \"@angular/material/legacy-progress-bar\";\nimport * as i8 from \"@angular/flex-layout/flex\";\nimport * as i9 from \"@angular/router\";\nfunction LockscreenComponent_small_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\", 17);\n    i0.ɵɵtext(1, \" Password is required \");\n    i0.ɵɵelementEnd();\n  }\n}\nexport let LockscreenComponent = /*#__PURE__*/(() => {\n  class LockscreenComponent {\n    constructor() {\n      this.lockscreenData = {\n        password: ''\n      };\n    }\n    ngOnInit() {}\n    unlock() {\n      console.log(this.lockscreenData);\n      this.submitButton.disabled = true;\n      this.progressBar.mode = 'indeterminate';\n    }\n  }\n  LockscreenComponent.ɵfac = function LockscreenComponent_Factory(t) {\n    return new (t || LockscreenComponent)();\n  };\n  LockscreenComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: LockscreenComponent,\n    selectors: [[\"app-lockscreen\"]],\n    viewQuery: function LockscreenComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(MatProgressBar, 5);\n        i0.ɵɵviewQuery(MatButton, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.progressBar = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.submitButton = _t.first);\n      }\n    },\n    decls: 23,\n    vars: 4,\n    consts: [[1, \"page-wrap\", \"h-full\", \"mat-bg-default\"], [1, \"session-form-hold\", \"session-lockscreen\"], [\"mode\", \"determinate\", 1, \"session-progress\"], [\"fxFlex\", \"column\", \"fxFlexWrap\", \"wrap\"], [\"fxFlexWrap\", \"wrap\", 1, \"lockscreen-user\"], [\"src\", \"assets/images/face-3.jpg\", \"alt\", \"\", 1, \"lockscreen-face\"], [1, \"m-0\", \"font-normal\"], [1, \"text-muted\"], [3, \"ngSubmit\"], [\"lockscreenForm\", \"ngForm\"], [1, \"\"], [1, \"full-width\"], [\"type\", \"password\", \"name\", \"password\", \"required\", \"\", \"matInput\", \"\", \"placeholder\", \"Password\", 3, \"ngModel\", \"ngModelChange\"], [\"password\", \"ngModel\"], [\"class\", \"form-error-msg\", 4, \"ngIf\"], [\"mat-raised-button\", \"\", 1, \"mat-primary\", \"full-width\", \"mb-8\", 3, \"disabled\"], [\"mat-raised-button\", \"\", \"color\", \"accent\", 1, \"mat-primary\", \"full-width\", 3, \"routerLink\"], [1, \"form-error-msg\"]],\n    template: function LockscreenComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1);\n        i0.ɵɵelement(2, \"mat-progress-bar\", 2);\n        i0.ɵɵelementStart(3, \"mat-card\")(4, \"mat-card-content\")(5, \"div\", 3)(6, \"div\", 4);\n        i0.ɵɵelement(7, \"img\", 5);\n        i0.ɵɵelementStart(8, \"h5\", 6);\n        i0.ɵɵtext(9, \"John Doe\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"small\", 7);\n        i0.ɵɵtext(11, \"Last seen 1 hour ago\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(12, \"form\", 8, 9);\n        i0.ɵɵlistener(\"ngSubmit\", function LockscreenComponent_Template_form_ngSubmit_12_listener() {\n          return ctx.unlock();\n        });\n        i0.ɵɵelementStart(14, \"div\", 10)(15, \"mat-form-field\", 11)(16, \"input\", 12, 13);\n        i0.ɵɵlistener(\"ngModelChange\", function LockscreenComponent_Template_input_ngModelChange_16_listener($event) {\n          return ctx.lockscreenData.password = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵtemplate(18, LockscreenComponent_small_18_Template, 2, 0, \"small\", 14);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(19, \"button\", 15);\n        i0.ɵɵtext(20, \"Unlock\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(21, \"button\", 16);\n        i0.ɵɵtext(22, \"It's not me!\");\n        i0.ɵɵelementEnd()()()()()()();\n      }\n      if (rf & 2) {\n        const _r0 = i0.ɵɵreference(13);\n        const _r1 = i0.ɵɵreference(17);\n        i0.ɵɵadvance(16);\n        i0.ɵɵproperty(\"ngModel\", ctx.lockscreenData.password);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", _r1.errors && (_r1.dirty || _r1.touched) && (_r1 == null ? null : _r1.errors == null ? null : _r1.errors.required));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"disabled\", _r0.invalid);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"routerLink\", \"/sessions/signin\");\n      }\n    },\n    dependencies: [i1.NgIf, i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.RequiredValidator, i2.NgModel, i2.NgForm, i3.MatLegacyButton, i4.MatLegacyFormField, i5.MatLegacyInput, i6.MatLegacyCard, i6.MatLegacyCardContent, i7.MatLegacyProgressBar, i8.DefaultFlexDirective, i9.RouterLink]\n  });\n  return LockscreenComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}